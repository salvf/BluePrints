/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo.Escritor_Lector;

import blueprints.ui.BPComponent;
import java.util.List;
import java.util.Observer;

/**
 *
 * @author terro
 */
public class BarTool extends javax.swing.JPanel implements Observer{

    /**
     * Creates new form BarTool
     */
    public BarTool() {
        initComponents();
        segtx.setText(velocidad.getValue()+"%");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        velocidad = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        segtx = new javax.swing.JLabel();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONEXIONES");
        jLabel1.setToolTipText("Agregar Lector");

        cb.setToolTipText("Conexiones");

        jLabel3.setText("Eliminar Conexion");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        velocidad.setMajorTickSpacing(10);
        velocidad.setMinorTickSpacing(10);
        velocidad.setPaintLabels(true);
        velocidad.setPaintTicks(true);
        velocidad.setOpaque(false);
        velocidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                velocidadStateChanged(evt);
            }
        });

        jLabel2.setText("Velocidad");

        segtx.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(segtx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addComponent(velocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addComponent(cb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(6, 6, 6))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(segtx))
                    .addComponent(velocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        eliminar();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void velocidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_velocidadStateChanged
        segtx.setText(velocidad.getValue()+"%");
    }//GEN-LAST:event_velocidadStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> cb;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel segtx;
    public static javax.swing.JSlider velocidad;
    // End of variables declaration//GEN-END:variables

    private void eliminar(){
        BPComponent[] comp;
        Thread t;
        int selected=cb.getSelectedIndex();
        if(selected>=0){
          comp= Main.bluePrintDesktop.getManager().remove(selected); 
          t=Main.threadescritor.get(comp[0].getName());
          if(t!=null){
              Main.EscritorBP escritor=(Main.EscritorBP)comp[0];
              t.interrupt();
              Main.semaforo.release();
              escritor.setLibro("");
              Main.threadescritor.replace(escritor.getName(), new Thread(escritor));
              escritor=null;
          }
          else {
              t=Main.threadlector.get(comp[1].getName());
              if(t!=null){
                Main.LectorBP lector=(Main.LectorBP)comp[1];
                t.interrupt();
                Main.semaforo1.release();
                lector.setLibro("");
                Main.threadlector.replace(lector.getName(), new Thread(lector));
                lector=null;
              }  
          }
        }
        comp=null;
        t=null;
    }
    
    @Override
    public void update(java.util.Observable o, Object arg) {
        
        List<BPComponent[]> ob=(List<BPComponent[]>)arg;
        cb.removeAllItems();
        ob.forEach((BPComponent[] a) -> {
            Thread thread;
            cb.addItem(a[0].getName()+"->"+a[1].getName());
            thread=Main.threadescritor.get(a[0].getName());
            if(thread!=null)
                if(!thread.isAlive()|| thread.isInterrupted())
                    thread.start();
            
            thread=Main.threadlector.get(a[1].getName());
            if(thread!=null)
                if(!thread.isAlive() || thread.isInterrupted())
                thread.start();
            thread=null;
        });
        ob=null;
    }
}
